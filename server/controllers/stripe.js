const prisma = require("../config/prisma");
const stripe = require("stripe")(process.env.STRIPE_SECRET_KEY);

exports.payment = async (req, res) => {
    try {
        console.log("üîç ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô payment()");

        // 1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Token ‡πÅ‡∏•‡∏∞ req.user
        if (!req.user || !req.user.id) {
            console.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (req.user):", req.user);
            return res.status(400).json({ message: "User not authenticated" });
        }

        console.log("üõí ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á user ID:", req.user.id);

        // 2Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Cart ‡∏à‡∏≤‡∏Å Database
        const cart = await prisma.cart.findFirst({
            where: { orderedById: req.user.id },
        });

        if (!cart) {
            console.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Cart ‡∏Ç‡∏≠‡∏á user:", req.user.id);
            return res.status(404).json({ message: "Cart not found" });
        }

        console.log("üí∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á PaymentIntent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô:", cart.cartTotal * 100);

        // 3Ô∏è‚É£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Stripe API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á PaymentIntent
        /*const paymentIntent = await stripe.paymentIntents.create({
            amount: cart.cartTotal * 100,
            currency: "thb",
            automatic_payment_methods: { enabled: true },
        });*/
        const paymentIntent = await stripe.paymentIntents.create({
          amount: cart.cartTotal * 100,
          currency: "thb",
          payment_method_types: ["card"],  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
      });
      

        console.log("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á PaymentIntent ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", paymentIntent.id);
        res.json({ clientSecret: paymentIntent.client_secret });
    } catch (err) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô payment function:", err);
        res.status(500).json({ message: "Server Error", error: err.message });
    }
};
